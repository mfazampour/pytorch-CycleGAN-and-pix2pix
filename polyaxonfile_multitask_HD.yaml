---
version: 1

kind: experiment

framework: pytorch

tags: [Mutltitask, HPTuning]



build:
  image: pytorch/pytorch:1.5-cuda10.1-cudnn7-runtime
  build_steps:
    - apt update
    - apt install -y libglib2.0-0 libsm6 libxext6 libxrender-dev git
    - pip install -r requirements.txt

environment:
  resources:
    cpu:
      requests: 3
      limits: 4
    memory:
      requests: 20000
      limits: 32000
    gpu:
      requests: 1
      limits: 1
  node_selector:
    nvidiaDriver: "450"

params:
  dataroot: "/Prostate_Reg_KM/anonymized/"
  dataset_mode: "volume"
  output_nc: 1
  input_nc: 1
  lr: 0.000001
  lr_Def: 0.0001
  lr_Seg: 0.0001
  lr_Reg: 0.0001
  lr_policy: "linear"
  display_freq: 50
  print_freq: 20
  lr_decay_iters: 1
  batch_size: 1
  epoch_count: 0
  n_epochs: 50
  netG: "global"
  CUT_mode: "CUT"
  model: "pix2pixHD_multitask"
  name: "HD_multi"
  val_fold: "validation/"
  train_fold: "train/"
  load_mask: True
  display_id: -1
  load_init_models: "/data/Prostate_Reg_KM/multitask/init_weights_cut_2/"
  epochs_before_reg: 0
  epoch: init
  netReg: "NormalNet"
  netSeg: "unet_small"



run:
    cmd: GEOMSTATS_BACKEND=pytorch python train.py --batch_size={{ batch_size }} \
                                    --dataroot={{ dataroot }} \
                                    --dataset_mode={{ dataset_mode }} \
                                    --output_nc={{ output_nc }} \
                                    --input_nc={{ input_nc }} \
                                    --lr {{ lr }} \
                                    --lr_Def {{ lr_Def }} \
                                    --lr_Seg {{ lr_Seg }} \
                                    --lr_Reg {{ lr_Reg }} \
                                    --lr_policy={{ lr_policy }} \
                                    --display_freq={{ display_freq }} \
                                    --print_freq {{ print_freq }}
                                    --lr_decay_iters {{ lr_decay_iters }} \
                                    --epoch_count={{ epoch_count }} \
                                    --n_epochs={{ n_epochs }} \
                                    --netG={{ netG }} \ 
                                    --CUT_mode={{ CUT_mode }} \ 
                                    --model={{ model }} \ 
                                    --val_fold={{ val_fold }} \ 
                                    --train_fold={{ train_fold }} \ 
                                    --load_mask={{ load_mask }} \ 
                                    --load_init_models={{ load_init_models }} \
                                    --epochs_before_reg={{ epochs_before_reg }} \
                                    --epoch={{ epoch }} \
                                    --display_id={{ display_id }} \
                                    --continue_train \
                                    --netReg {{ netReg }} \
                                    --netSeg  {{ netSeg }} \
                                    --no_instance
                                    --no_vgg_loss
