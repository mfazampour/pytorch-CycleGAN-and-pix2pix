--- 
build: 
  build_steps: 
    - "apt update"
    - "apt install -y libglib2.0-0 libsm6 libxext6 libxrender-dev git"
    - "pip install -r requirements.txt"
  image: "pytorch/pytorch:1.5-cuda10.1-cudnn7-runtime"
environment: 
  node_selector: 
    nvidiaDriver: "450"
  resources: 
    cpu: 
      limits: 4
      requests: 3
    gpu: 
      limits: 1
      requests: 1
    memory: 
      limits: 32000
      requests: 20000
framework: pytorch
kind: experiment
params: 
  dataroot: '/Prostate_Reg_KM/Anonymized_cleaned/'
  dataset_mode: "volume"
  output_nc: 1
  input_nc: 1
  lr: 0.000001
  lr_Def: 0.0001
  lr_Seg: 0.0001
  lr_Reg: 0.0001
  netReg: 'NormalNet'
  netSeg: 'unet_small'
  lr_policy: "linear"
  display_freq: 50
  print_freq: 20
  lr_decay_iters: 1
  batch_size: 1
  epoch_count: 0
  netG: resnet_6blocks
  netD: basic
  model: cycle_gan3d_multitask
  n_epochs: 10
  name: cycle_multi
  val_fold: "validation/"
  train_fold: "train/"
  load_mask: True
  display_id: -1
  load_init_models: "/data/Prostate_Reg_KM/multitask/cycle_gan/"
  epochs_before_regline: 0
  epoch: latest
  gan_mode: lsgan


run:
    cmd: GEOMSTATS_BACKEND=pytorch python train.py --batch_size={{ batch_size }} \
                                    --dataroot={{ dataroot }} \
                                    --dataset_mode={{ dataset_mode }} \
                                    --output_nc={{ output_nc }} \
                                    --input_nc={{ input_nc }} \
                                    --lr {{ lr }} \                          
                                    --lr_policy={{ lr_policy }} \
                                    --display_freq={{ display_freq }} \
                                    --print_freq {{ print_freq }}
                                    --lr_decay_iters {{ lr_decay_iters }} \
                                    --epoch_count={{ epoch_count }} \
                                    --n_epochs={{ n_epochs }} \
                                    --netG={{ netG }} \ 
                                    --netD={{ netD }} \ 
                                    --model={{ model }} \ 
                                    --val_fold={{ val_fold }} \ 
                                    --train_fold={{ train_fold }} \ 
                                    --load_mask={{ load_mask }} \ 
                                    --load_init_models={{ load_init_models }} \
                                    --epoch={{ epoch }} \
                                    --display_id={{ display_id }} \
                                    --netReg={{ netReg }} \
                                    --netSeg={{ netSeg }} \
                                    --gan_mode={{ gan_mode }} \
                                    --continue_train \
                                    --no_instance
                                    --no_vgg_loss
                                    --use_rigid_branch

tags: 
  - pix2pix3d
version: 1



