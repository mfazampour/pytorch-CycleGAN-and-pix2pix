---
version: 1

kind: experiment

framework: pytorch

tags: [MR_Segmentation]



build:
  image: pytorch/pytorch:1.5-cuda10.1-cudnn7-runtime
  build_steps:
    - apt update
    - apt install -y libglib2.0-0 libsm6 libxext6 libxrender-dev git
    - pip install -r requirements.txt

environment:
  resources:
    cpu:
      requests: 3
      limits: 4
    memory:
      requests: 20000
      limits: 32000
    gpu:
      requests: 1
      limits: 1
  node_selector:
    nvidiaDriver: "450"

params:
  dataroot: "/Prostate_Reg_KM/anonymized"
  dataset_mode: "volume"
  name: "unet_seg"
  model: "segmentation"
  netSeg: "unet_small"
  input_nc: 1
  output_nc: 1
  lr_policy: "linear"
  display_freq: 50
  lr_decay_iters: 1
  batch_size: 40
  display_server: http://0.0.0.0
  n_epochs: 25
  n_epochs_decay: 25
  print_freq: 20
  lr: 0.0002
  load_mask: true
  gpu_ids: 0
  num_threads: 3
  display_ncols: 3
  val_fold: "validation/"
  train_fold: "train/"


run:
    cmd: GEOMSTATS_BACKEND=pytorch python train.py --batch_size={{ batch_size }} \
                                    --n_epochs={{ n_epochs }} \
                                    --n_epochs_decay {{ n_epochs_decay }} \
                                    --model={{ model }} \
                                    --dataroot={{ dataroot }} \
                                    --name={{ name }} \
                                    --input_nc={{ input_nc }} \
                                    --output_nc={{ output_nc }} \
                                    --netSeg={{ netSeg }} \
                                    --dataset_mode={{ dataset_mode }} \
                                    --lr_policy={{ lr_policy }} \
                                    --display_freq={{ display_freq }} \
                                    --lr_decay_iters={{ lr_decay_iters }} \
                                    --display_server={{ display_server }} \
                                    --print_freq={{ print_freq }} \
                                    --lr={{ lr }} \
                                    --load_mask={{ load_mask }} \
                                    --gpu_ids={{ gpu_ids }} \
                                    --num_threads={{ num_threads }} \
                                    --display_ncols={{ display_ncols }} \
                                    --display_id -1 \
                                    --val_fold={{ val_fold }} \
                                    --train_fold={{ train_fold }} \
                                    --transforms flip affine \
                                    --inshape 80 80 80

