---
version: 1

kind: experiment

framework: pytorch

tags: [DRIT3d]

build:
  image: pytorch/pytorch:1.7.0-cuda11.0-cudnn8-runtime
  build_steps:
    - apt update
    - apt install -y libglib2.0-0 libsm6 libxext6 libxrender-dev git
    - pip install -r requirements.txt

environment:
  resources:
    cpu:
      requests: 3
      limits: 4
    memory:
      requests: 20000
      limits: 32000
    gpu:
      requests: 1
      limits: 1
  node_selector:
    gpuMemory: '12'

params:
  n_epochs: 25
  n_epochs_decay: 25
  dataroot: "/Prostate_Reg_KM/Anonymized_cleaned"
  name: "drit3d"
  model: "drit3d"
  netG: "resnet_cat"
  input_nc: 1
  output_nc: 1
  lr_policy: "linear"
  display_freq: 50
  lr_decay_iters: 1
  batch_size: 2
  print_freq: 10
  lr: 0.00002
  gpu_ids: 0
  num_threads: 3
  epoch: 0
  val_fold: validation
  train_fold: train
  display_id: -1
  gan_mode_cont: lsgan
  n_layers_cont: 2
  ndf_cont: 16
  output_nc_cont: 64
  gan_mode: lsgan
  n_layers_d_cont: 2
  lambda_domain_adv: 5.0


run:
    cmd: GEOMSTATS_BACKEND=pytorch python train.py --batch_size={{ batch_size }} \
                                    --n_epochs={{ n_epochs }} \
                                    --n_epochs_decay {{ n_epochs_decay }} \
                                    --model={{ model }} \
                                    --dataroot={{ dataroot }} \
                                    --name={{ name }} \
                                    --model={{ model }} \
                                    --input_nc={{ input_nc }} \
                                    --output_nc={{ output_nc }} \
                                    --netG={{ netG }} \
                                    --lr_policy={{ lr_policy }} \
                                    --display_freq={{ display_freq }} \
                                    --lr_decay_iters={{ lr_decay_iters }} \
                                    --batch_size={{ batch_size }} \
                                    --print_freq={{ print_freq }} \
                                    --lr={{ lr }} \
                                    --gpu_ids={{ gpu_ids }} \
                                    --num_threads={{ num_threads }} \
                                    --display_id={{ display_id }} \
                                    --val_fold={{ val_fold }} \
                                    --gan_mode_cont {{ gan_mode_cont }} \
                                    --n_layers_cont {{ n_layers_cont }} \
                                    --ndf_cont {{ ndf_cont }} \
                                    --output_nc_cont  {{ output_nc_cont }} \
                                    --gan_mode {{ gan_mode }} \
                                    --n_layers_d_cont {{ n_layers_d_cont }} \
                                    --lambda_domain_adv {{ lambda_domain_adv }} \
